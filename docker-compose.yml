services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-audiobook_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5434}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      # Database Configuration
      POSTGRES_SERVER: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-audiobook_db}
      POSTGRES_PORT: 5432
      
      # CORS Configuration
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS:-http://localhost:3000,http://localhost:3001}
      
      # API Configuration
      API_V1_STR: ${API_V1_STR:-/api/v1}
      PROJECT_NAME: ${PROJECT_NAME:-Audiobook API}
      VERSION: ${VERSION:-0.1.0}
      
      # Clerk Authentication
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      
      # DigitalOcean Spaces
      DIGITAL_OCEAN_ACCESS_KEY: ${DIGITAL_OCEAN_ACCESS_KEY}
      DIGITAL_OCEAN_ACCESS_SECRET: ${DIGITAL_OCEAN_ACCESS_SECRET}
      DO_SPACES_ENDPOINT: ${DO_SPACES_ENDPOINT:-https://nyc3.digitaloceanspaces.com}
      DO_SPACES_REGION: ${DO_SPACES_REGION:-nyc3}
      DO_SPACES_BUCKET: ${DO_SPACES_BUCKET}
      DO_SPACES_CDN_URL: ${DO_SPACES_CDN_URL}
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
